js execution context

when code file is created in js --> global execution context gets created and where GEC gets created it is referred to a variable 'this'

node js and browser(window) global execution context are different..

js is single threaded

Global execution context
Function execution context
Eval execution context  --> property of global object only for interview


Memory creation phase --> memory or place gets allocated for variables
execution phase --> executes

let val1=10;
let val2=5;
function addNum(num1,num2){
    let total=num1+num2
    return total;
}
let result1=addNum(val1,val2)
let result2=addNum(10,2)

step1 -> GEC -> this

step2 -> Memory creation phase -> val1-->undefined and val2->undefined addNum->defination of function result1->undefined result2-> undefined      ///first cycle 

cycle3
step3->execution phase --> val1=10,val2=5 

[line 23 wala]addNum-> creates execution context [new variable environment and execution thread ]--> both memory phase and execution phase(/thread) gets created for every function call
now for addNum
    -> memory phase
         ->val1-> undefined val2-> undefined total-> undefined
    ->execution context
        -> num1=10 num2=5 total=15 return total to GEC 
After completion of this execution context gets deleted

now for result2=addNum(10,2)--> same thing happens  line [33 to 39]


callstack-> scope //visit this topic